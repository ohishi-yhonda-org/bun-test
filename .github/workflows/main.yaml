name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: [self-hosted, Windows, X64]

    steps:
      - uses: actions/checkout@v3
      
      - name: Verify Node.js and npm
        run: |
          Write-Output "Node.js version: $(node --version)"
          Write-Output "npm version: $(npm --version)"
        shell: powershell
        
      - name: list files
        run: Get-ChildItem
        shell: powershell
        
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
        continue-on-error: true
        
      - name: Verify Bun installation
        run: |
          try {
            $bunVersion = bun --version
            Write-Output "✓ Bun is available, version: $bunVersion"
            Write-Output "BUN_AVAILABLE=true" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          } catch {
            Write-Output "⚠️ Bun not available, will use npm"
            Write-Output "BUN_AVAILABLE=false" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          }
        shell: powershell
        
      - name: Install dependencies
        run: |
          if ($env:BUN_AVAILABLE -eq "true") {
            Write-Output "Installing dependencies with Bun..."
            try {
              bun install
              if ($LASTEXITCODE -ne 0) {
                throw "Bun install failed with exit code $LASTEXITCODE"
              }
              Write-Output "✓ Dependencies installed successfully with Bun"
            } catch {
              Write-Output "❌ Bun install failed: $_"
              Write-Output "Falling back to npm..."
              npm install
            }
          } else {
            Write-Output "Installing dependencies with npm..."
            npm install
          }
        shell: powershell
        
      - name: generate Prisma client
        run: |
          if ($env:BUN_AVAILABLE -eq "true") {
            Write-Output "Generating Prisma client with Bun..."
            try {
              bun run prisma generate
              if ($LASTEXITCODE -ne 0) {
                throw "Bun prisma generate failed with exit code $LASTEXITCODE"
              }
              Write-Output "✓ Prisma client generated successfully with Bun"
            } catch {
              Write-Output "❌ Bun prisma generate failed: $_"
              Write-Output "Falling back to npm..."
              npx prisma generate
            }
          } else {
            Write-Output "Generating Prisma client with npm..."
            npx prisma generate
          }
        shell: powershell
        
      - name: Build project (if available)
        run: |
          $packageJson = Get-Content "package.json" | ConvertFrom-Json
          if ($packageJson.scripts.build) {
            if ($env:BUN_AVAILABLE -eq "true") {
              Write-Output "Building with Bun..."
              try {
                bun run build
                if ($LASTEXITCODE -ne 0) {
                  throw "Bun build failed with exit code $LASTEXITCODE"
                }
                Write-Output "✓ Build completed successfully with Bun"
              } catch {
                Write-Output "❌ Bun build failed: $_"
                Write-Output "Falling back to npm..."
                npm run build
              }
            } else {
              Write-Output "Building with npm..."
              npm run build
            }
          } else {
            Write-Output "No build script found, skipping build"
          }
        shell: powershell 
